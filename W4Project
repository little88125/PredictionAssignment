# load necessary libraries
library(caret)
library(randomForest)

# read in the data and identify the NA's
traindata <- read.csv("pml-training.csv", na.strings = c("NA", "#DIV/0!", ""))
testdata  <- read.csv("pml-testing.csv", na.strings = c("NA", "#DIV/0!", ""))

# remove NA columns for the training and testing data
comps <- complete.cases(t(traindata)) & complete.cases(t(testdata))
traindata <- traindata[,comps]
testdata  <- testdata[,comps]

# remove columns with data that isn't useful
traindata <- traindata[,-c(1,3,4,5,6,7)]
testdata <- testdata[,-c(1,3,4,5,6,7)]

# data splitting
set.seed(111)
inTrain <- createDataPartition(traindata$classe, p=0.6, list=FALSE)
traindata2 <- traindata[inTrain,]
validation <- traindata[-inTrain,]

# fit a model
modFit <- randomForest(classe~., data=traindata2)

# the results on the training set
trainresults <- predict(modFit, traindata2)
trainacc <- sum(trainresults==traindata2$classe)/length(trainresults)
paste("Accuracy on training set =",trainacc)

# the results on the validation set
validresults <- predict(modFit, newdata=validation)
validacc <- sum(validresults==validation$classe)/length(validresults)
paste("Accuracy on validation set =",validacc)

# the results on the test set
testresults <- predict(modFit, newdata=testdata)
print("Classifications on the test set:"); testresults
