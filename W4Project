---
title: "PredictionW4Project"
author: "Sheng Xu"
date: "5/16/2020"
output: html_document
---

```{r}
# load libraries

library(caret)
library(randomForest)
```

```{r}
# download csv files and identify NA
downloadcsv <- function(url, nastrings) {
    temp <- tempfile()
    download.file(url, temp)
    data <- read.csv(temp, na.strings = nastrings)
    unlink(temp)
    return(data)
}

training_url <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
training <- downloadcsv(training_url, c("", "NA", "#DIV/0!"))

testing_url <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
testing <- downloadcsv(testing_url, c("", "NA", "#DIV/0!"))
```

```{r}
# Remove NA columns from the data set
comps <- complete.cases(t(training)) & complete.cases(t(testing))
training_clean <- training[,comps]
testing_clean <- testing[,comps]
```

```{r}
# Remove data that are not useful
training_clean <- training_clean[,-c(1,3,4,5,6,7)]
testing_clean <- testing_clean[,-c(1,3,4,5,6,7)]
```

```{r}
# splitting data into 2 sets for further validation
set.seed(123456)
trainingset <- createDataPartition(training_clean$classe, p = 0.8, list = FALSE)
Training <- training_clean[trainingset, ]
Validation <- training_clean[-trainingset, ]
```

```{r}
# Model Fitting and Results
modFit <- randomForest(classe~., data=Training)
```

```{r}
TrainingResults <- predict(modFit, Training)
TrainingAccuracy <- sum(TrainingResults==Training$classe)/length(TrainingResults)
paste("Accuracy on training set =",TrainingAccuracy)

ValidationResults <- predict(modFit, newdata=ValidationResults)
ValidationAccuracy <- sum(ValidationResults==ValidationResults$classe)/length(ValidationResults)
paste("Accuracy on validation set =",ValidationAccuracy)
---
title: "PredictionW4Project"
author: "Sheng Xu"
date: "5/16/2020"
output: html_document
---

```{r}
# load libraries

library(caret)
library(randomForest)
```

```{r}
# download csv files and identify NA
downloadcsv <- function(url, nastrings) {
    temp <- tempfile()
    download.file(url, temp)
    data <- read.csv(temp, na.strings = nastrings)
    unlink(temp)
    return(data)
}

training_url <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
training <- downloadcsv(training_url, c("", "NA", "#DIV/0!"))

testing_url <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
testing <- downloadcsv(testing_url, c("", "NA", "#DIV/0!"))
```

```{r}
# Remove NA columns from the data set
comps <- complete.cases(t(training)) & complete.cases(t(testing))
training_clean <- training[,comps]
testing_clean <- testing[,comps]
```

```{r}
# Remove data that are not useful
training_clean <- training_clean[,-c(1,3,4,5,6,7)]
testing_clean <- testing_clean[,-c(1,3,4,5,6,7)]
```

```{r}
# splitting data into 2 sets for further validation
set.seed(123456)
trainingset <- createDataPartition(training_clean$classe, p = 0.8, list = FALSE)
Training <- training_clean[trainingset, ]
Validation <- training_clean[-trainingset, ]
```

```{r}
# Model Fitting and Results
modFit <- randomForest(classe~., data=Training)
```

```{r}
TrainingResults <- predict(modFit, Training)
TrainingAccuracy <- sum(TrainingResults==Training$classe)/length(TrainingResults)
paste("Accuracy on training set =",TrainingAccuracy)

ValidationResults <- predict(modFit, newdata=Validation)
ValidationAccuracy <- sum(ValidationResults==Validation$classe)/length(ValidationResults)
paste("Accuracy on validation set =",ValidationAccuracy)
```

```{r}
TestingResults <- predict(modFit, newdata=testing_clean)
print("Classifications on the test set:"); TestingResults
```
